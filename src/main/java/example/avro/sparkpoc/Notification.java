/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package example.avro.sparkpoc;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Notification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5450294875848655444L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Notification\",\"namespace\":\"example.avro.sparkpoc\",\"fields\":[{\"name\":\"version\",\"type\":\"string\",\"default\":\"1.0.0\"},{\"name\":\"publishTime\",\"type\":\"string\"},{\"name\":\"itemGuid\",\"type\":\"string\"},{\"name\":\"itemType\",\"type\":{\"type\":\"enum\",\"name\":\"ItemType\",\"symbols\":[\"Letter\",\"Parcel\"],\"default\":\"Letter\"}},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"responsiblePersonGuid\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Notification> ENCODER =
      new BinaryMessageEncoder<Notification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Notification> DECODER =
      new BinaryMessageDecoder<Notification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Notification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Notification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Notification>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Notification to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Notification from a ByteBuffer. */
  public static Notification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence version;
  @Deprecated public java.lang.CharSequence publishTime;
  @Deprecated public java.lang.CharSequence itemGuid;
  @Deprecated public example.avro.sparkpoc.ItemType itemType;
  @Deprecated public java.lang.CharSequence reason;
  @Deprecated public java.lang.CharSequence responsiblePersonGuid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Notification() {}

  /**
   * All-args constructor.
   * @param version The new value for version
   * @param publishTime The new value for publishTime
   * @param itemGuid The new value for itemGuid
   * @param itemType The new value for itemType
   * @param reason The new value for reason
   * @param responsiblePersonGuid The new value for responsiblePersonGuid
   */
  public Notification(java.lang.CharSequence version, java.lang.CharSequence publishTime, java.lang.CharSequence itemGuid, example.avro.sparkpoc.ItemType itemType, java.lang.CharSequence reason, java.lang.CharSequence responsiblePersonGuid) {
    this.version = version;
    this.publishTime = publishTime;
    this.itemGuid = itemGuid;
    this.itemType = itemType;
    this.reason = reason;
    this.responsiblePersonGuid = responsiblePersonGuid;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return version;
    case 1: return publishTime;
    case 2: return itemGuid;
    case 3: return itemType;
    case 4: return reason;
    case 5: return responsiblePersonGuid;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: version = (java.lang.CharSequence)value$; break;
    case 1: publishTime = (java.lang.CharSequence)value$; break;
    case 2: itemGuid = (java.lang.CharSequence)value$; break;
    case 3: itemType = (example.avro.sparkpoc.ItemType)value$; break;
    case 4: reason = (java.lang.CharSequence)value$; break;
    case 5: responsiblePersonGuid = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'publishTime' field.
   * @return The value of the 'publishTime' field.
   */
  public java.lang.CharSequence getPublishTime() {
    return publishTime;
  }

  /**
   * Sets the value of the 'publishTime' field.
   * @param value the value to set.
   */
  public void setPublishTime(java.lang.CharSequence value) {
    this.publishTime = value;
  }

  /**
   * Gets the value of the 'itemGuid' field.
   * @return The value of the 'itemGuid' field.
   */
  public java.lang.CharSequence getItemGuid() {
    return itemGuid;
  }

  /**
   * Sets the value of the 'itemGuid' field.
   * @param value the value to set.
   */
  public void setItemGuid(java.lang.CharSequence value) {
    this.itemGuid = value;
  }

  /**
   * Gets the value of the 'itemType' field.
   * @return The value of the 'itemType' field.
   */
  public example.avro.sparkpoc.ItemType getItemType() {
    return itemType;
  }

  /**
   * Sets the value of the 'itemType' field.
   * @param value the value to set.
   */
  public void setItemType(example.avro.sparkpoc.ItemType value) {
    this.itemType = value;
  }

  /**
   * Gets the value of the 'reason' field.
   * @return The value of the 'reason' field.
   */
  public java.lang.CharSequence getReason() {
    return reason;
  }

  /**
   * Sets the value of the 'reason' field.
   * @param value the value to set.
   */
  public void setReason(java.lang.CharSequence value) {
    this.reason = value;
  }

  /**
   * Gets the value of the 'responsiblePersonGuid' field.
   * @return The value of the 'responsiblePersonGuid' field.
   */
  public java.lang.CharSequence getResponsiblePersonGuid() {
    return responsiblePersonGuid;
  }

  /**
   * Sets the value of the 'responsiblePersonGuid' field.
   * @param value the value to set.
   */
  public void setResponsiblePersonGuid(java.lang.CharSequence value) {
    this.responsiblePersonGuid = value;
  }

  /**
   * Creates a new Notification RecordBuilder.
   * @return A new Notification RecordBuilder
   */
  public static example.avro.sparkpoc.Notification.Builder newBuilder() {
    return new example.avro.sparkpoc.Notification.Builder();
  }

  /**
   * Creates a new Notification RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Notification RecordBuilder
   */
  public static example.avro.sparkpoc.Notification.Builder newBuilder(example.avro.sparkpoc.Notification.Builder other) {
    return new example.avro.sparkpoc.Notification.Builder(other);
  }

  /**
   * Creates a new Notification RecordBuilder by copying an existing Notification instance.
   * @param other The existing instance to copy.
   * @return A new Notification RecordBuilder
   */
  public static example.avro.sparkpoc.Notification.Builder newBuilder(example.avro.sparkpoc.Notification other) {
    return new example.avro.sparkpoc.Notification.Builder(other);
  }

  /**
   * RecordBuilder for Notification instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Notification>
    implements org.apache.avro.data.RecordBuilder<Notification> {

    private java.lang.CharSequence version;
    private java.lang.CharSequence publishTime;
    private java.lang.CharSequence itemGuid;
    private example.avro.sparkpoc.ItemType itemType;
    private java.lang.CharSequence reason;
    private java.lang.CharSequence responsiblePersonGuid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(example.avro.sparkpoc.Notification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.publishTime)) {
        this.publishTime = data().deepCopy(fields()[1].schema(), other.publishTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.itemGuid)) {
        this.itemGuid = data().deepCopy(fields()[2].schema(), other.itemGuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.itemType)) {
        this.itemType = data().deepCopy(fields()[3].schema(), other.itemType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reason)) {
        this.reason = data().deepCopy(fields()[4].schema(), other.reason);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.responsiblePersonGuid)) {
        this.responsiblePersonGuid = data().deepCopy(fields()[5].schema(), other.responsiblePersonGuid);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Notification instance
     * @param other The existing instance to copy.
     */
    private Builder(example.avro.sparkpoc.Notification other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.publishTime)) {
        this.publishTime = data().deepCopy(fields()[1].schema(), other.publishTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.itemGuid)) {
        this.itemGuid = data().deepCopy(fields()[2].schema(), other.itemGuid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.itemType)) {
        this.itemType = data().deepCopy(fields()[3].schema(), other.itemType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reason)) {
        this.reason = data().deepCopy(fields()[4].schema(), other.reason);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.responsiblePersonGuid)) {
        this.responsiblePersonGuid = data().deepCopy(fields()[5].schema(), other.responsiblePersonGuid);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.CharSequence getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.version = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder clearVersion() {
      version = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'publishTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getPublishTime() {
      return publishTime;
    }

    /**
      * Sets the value of the 'publishTime' field.
      * @param value The value of 'publishTime'.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder setPublishTime(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.publishTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'publishTime' field has been set.
      * @return True if the 'publishTime' field has been set, false otherwise.
      */
    public boolean hasPublishTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'publishTime' field.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder clearPublishTime() {
      publishTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemGuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getItemGuid() {
      return itemGuid;
    }

    /**
      * Sets the value of the 'itemGuid' field.
      * @param value The value of 'itemGuid'.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder setItemGuid(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.itemGuid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'itemGuid' field has been set.
      * @return True if the 'itemGuid' field has been set, false otherwise.
      */
    public boolean hasItemGuid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'itemGuid' field.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder clearItemGuid() {
      itemGuid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemType' field.
      * @return The value.
      */
    public example.avro.sparkpoc.ItemType getItemType() {
      return itemType;
    }

    /**
      * Sets the value of the 'itemType' field.
      * @param value The value of 'itemType'.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder setItemType(example.avro.sparkpoc.ItemType value) {
      validate(fields()[3], value);
      this.itemType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'itemType' field has been set.
      * @return True if the 'itemType' field has been set, false otherwise.
      */
    public boolean hasItemType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'itemType' field.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder clearItemType() {
      itemType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason' field.
      * @return The value.
      */
    public java.lang.CharSequence getReason() {
      return reason;
    }

    /**
      * Sets the value of the 'reason' field.
      * @param value The value of 'reason'.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder setReason(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.reason = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'reason' field has been set.
      * @return True if the 'reason' field has been set, false otherwise.
      */
    public boolean hasReason() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'reason' field.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder clearReason() {
      reason = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'responsiblePersonGuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getResponsiblePersonGuid() {
      return responsiblePersonGuid;
    }

    /**
      * Sets the value of the 'responsiblePersonGuid' field.
      * @param value The value of 'responsiblePersonGuid'.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder setResponsiblePersonGuid(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.responsiblePersonGuid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'responsiblePersonGuid' field has been set.
      * @return True if the 'responsiblePersonGuid' field has been set, false otherwise.
      */
    public boolean hasResponsiblePersonGuid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'responsiblePersonGuid' field.
      * @return This builder.
      */
    public example.avro.sparkpoc.Notification.Builder clearResponsiblePersonGuid() {
      responsiblePersonGuid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Notification build() {
      try {
        Notification record = new Notification();
        record.version = fieldSetFlags()[0] ? this.version : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.publishTime = fieldSetFlags()[1] ? this.publishTime : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.itemGuid = fieldSetFlags()[2] ? this.itemGuid : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.itemType = fieldSetFlags()[3] ? this.itemType : (example.avro.sparkpoc.ItemType) defaultValue(fields()[3]);
        record.reason = fieldSetFlags()[4] ? this.reason : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.responsiblePersonGuid = fieldSetFlags()[5] ? this.responsiblePersonGuid : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Notification>
    WRITER$ = (org.apache.avro.io.DatumWriter<Notification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Notification>
    READER$ = (org.apache.avro.io.DatumReader<Notification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
